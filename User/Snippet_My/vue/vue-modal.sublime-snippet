<snippet>
    <content><![CDATA[
let componentModal = {
    props: [
        'item'
    ],
    template: `
<transition name="modal">
    <div class="modal-wrap">
        <div class="modal-mask">
            <div class="modal-wrapper">
                <div class="container-fluid">
                    <div class="modal-container">
                        <div class="modal-header">
                            <slot name="header">
                                Header
                            </slot>
                            <button class="btn btn-outline-danger" @click="$emit('close')">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                            </button>
                        </div>
                        <div class="modal-body">
                            <slot name="body">
                            Body
                            </slot>
                        </div>
                        <div class="modal-footer">
                            <slot name="footer">
                            default footer
                            </slot>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</transition>`,
};
// use html
<modal v-show="showModal && item" :item="item" @close="showModal = false">
    <div slot="header" class="d-flex justify-content-center align-items-center"><h4 class="text-center mx-auto text-primary">@{{ item.name }}</h4></div>
    <div slot="body">
    </div>
    <div slot="footer">
        <button class="btn btn-success" @click="updateData(item)">OK</button>
    </div>
</modal>]]></content>
    <tabTrigger>vue-modal</tabTrigger>
    <description>vue-components</description>
</snippet> 