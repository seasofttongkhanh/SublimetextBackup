<snippet>
	<content><![CDATA[
namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\User;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Laravel\Passport\Passport;
use Validator;

class UserController extends Controller
{
    public \$successStatus = 200;
    /**
    * login api
    *
    * @return \Illuminate\Http\Response
    */
    public function login(Request \$request)
    {
        \$input = \$request->only('email', 'password');
        if (Auth::attempt(\$input)) {
            \$user = Auth::user();

            \$checkToken = DB::table('oauth::access::tokens')->where('user::id', \$user->id);

            if (\$checkToken->exists()) {
                \$checkToken->delete();
            }
            \$token = \$user->createToken(\$user->name)->accessToken;
            Passport::tokensExpireIn(Carbon::now()->addDays(1));
            return response()->json([
                'success' => true,
                'token' => \$token,
            ], \$this->successStatus);
        } else {
            return response()->json([
                'success' => false,
                'error' => 'Unauthorised',
            ], 401);
        }
    }
    /**
    * Register api
    *
    * @return \Illuminate\Http\Response
    */
    public function register(Request \$request)
    {
        \$validator = Validator::make(\$request->all(), [
            'name' => 'required',
            'email' => 'required|email',
            'password' => 'required',
            // 'c::password' => 'required|same:password',
        ]);
        if (\$validator->fails()) {
            return response()->json(['error' => \$validator->errors()], 401);
        }
        \$input = \$request->all();
        \$input['password'] = bcrypt(\$input['password']);
        \$user = User::create(\$input);
        \$success['token'] = \$user->createToken('MyApp')->accessToken;
        \$success['name'] = \$user->name;
        return response()->json(['success' => \$success], \$this->successStatus);
    }
    /**
    * details api
    *
    * @return \Illuminate\Http\Response
    */
    public function details()
    {
        \$user = Auth::user();
        return response()->json(['success' => \$user], \$this->successStatus);
    }

    public function logout()
    {
        if (Auth::check()) {
           \$user = Auth::user();
           \$tokenAccess= DB::table('oauth::access::tokens')->where('user::id', \$user->id);
           \$tokenAccess->delete();
           return response()->json(true, 200);
        }
           return response()->json(false, 401);
    }
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>laravel_api::user</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php</scope>
</snippet>
